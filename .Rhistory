new_row
new_row[1]
new_row[2]
row[1]
runApp('Weather/shiny-quickstart-1/downloads/code/weatherApp.R')
new_row
new_row
runApp('Weather/shiny-quickstart-1/downloads/code/weatherApp.R')
length(new_values)
new_cols_length
length(new_values) / new_cols_length
names
length(names)
runApp('Weather/shiny-quickstart-1/downloads/code/weatherApp.R')
length(new_values)
length(new_values) / new_cols_length
View(new_data)
dim(new_data)
length(names)
runApp('Weather/shiny-quickstart-1/downloads/code/weatherApp.R')
View(new_data)
runApp('Weather/shiny-quickstart-1/downloads/code/weatherApp.R')
library(shiny); runApp('Weather/shiny-quickstart-1/downloads/code/weatherApp.R')
infile_1()
runApp('Weather/shiny-quickstart-1/downloads/code/weatherApp.R')
runApp('Weather/shiny-quickstart-1/downloads/code/weatherApp.R')
runApp('Weather/shiny-quickstart-1/downloads/code/weatherApp.R')
View(stuff)
runApp('Weather/shiny-quickstart-1/downloads/code/weatherApp.R')
View(data1)
View(data1)
View(data2)
View(data2)
runApp('Weather/shiny-quickstart-1/downloads/code/weatherApp.R')
runApp('Weather/shiny-quickstart-1/downloads/code/weatherApp.R')
View(data1)
View(data1)
View(data2)
names
View(data1)
View(data2)
View(joined)
View(selected_info)
runApp('Weather/shiny-quickstart-1/downloads/code/weatherApp.R')
View(compressed)
View(feature1)
View(feature2)
debugSource('~/Weather/shiny-quickstart-1/downloads/code/helper_functions.R')
runApp('Weather/shiny-quickstart-1/downloads/code/weatherApp.R')
column
class(column)
library(ggplot2)
library(tibble)
library(readr)
library(dplyr)
library(plotrix)
data <- read_csv('data.csv')
data <- read_csv('data.csv')
#x is being set equal to the column name of the data thye want to plot
ggplot(data = data, aes(x = K, y = SSE)) +
geom_line() + xlab('K') + ylab('SSE') + ggtitle('K Mean on the Iris data set')
data <- read_csv('data.csv')
#x is being set equal to the column name of the data thye want to plot
ggplot(data = data, aes(x = K, y = SSE)) +
geom_line() + xlab('K') + ylab('SSE') + ggtitle('K Mean on the Iris Data Set + Output Class')
data <- read_csv('data.csv')
#x is being set equal to the column name of the data thye want to plot
ggplot(data = data, aes(x = K, y = SSE, color = Class)) +
geom_line() + xlab('K') + ylab('SSE') + ggtitle('K Mean on the Iris Data Set + Output Class')
data <- read_csv('data.csv')
#x is being set equal to the column name of the data thye want to plot
ggplot(data = data, aes(x = K, y = SSE, color = Class)) +
geom_line() + xlab('K') + ylab('SSE') + ggtitle('K Mean on the Iris Data Set')
data <- read_csv('data.csv')
#x is being set equal to the column name of the data thye want to plot
ggplot(data = data, aes(x = K, y = SSE, color = Class)) +
geom_line() + xlab('K') + ylab('SSE') + ggtitle('K Mean on Abalone Data Set')
data <- read_csv('data.csv')
#x is being set equal to the column name of the data thye want to plot
ggplot(data = data, aes(x = Silh, y = Class, color = Class)) +
geom_bar() + xlab('Silh') + ylab('Class') + ggtitle('K Mean on Abalone Data Set')
data <- read_csv('data.csv')
#x is being set equal to the column name of the data thye want to plot
ggplot(data = data, aes(x = Silh, y = Class, color = Class)) +
geom_bar() + xlab('Silh') + ylab('Class') + ggtitle('K Mean on Abalone Data Set')
data <- read_csv('data.csv')
#x is being set equal to the column name of the data thye want to plot
ggplot(data = data, aes(x = Silh, color = Class)) +
geom_bar() + xlab('Silh') + ylab('Class') + ggtitle('K Mean on Abalone Data Set')
data <- read_csv('data.csv')
#x is being set equal to the column name of the data thye want to plot
ggplot(data = data, aes(x = Index, y = Silh, color = Class)) +
geom_bar() + xlab('Silh') + ylab('Class') + ggtitle('K Mean on Abalone Data Set')
data <- read_csv('data.csv')
#x is being set equal to the column name of the data thye want to plot
ggplot(data = data, aes(x = Index, y = Silh, color = Class)) +
geom_bar() + xlab('Silh') + ylab('Class') + ggtitle('K Mean on Abalone Data Set')
data
data <- read_csv('data.csv')
#x is being set equal to the column name of the data thye want to plot
ggplot(data = data, aes(x = Index, color = Class)) +
geom_bar() + xlab('Silh') + ylab('Class') + ggtitle('K Mean on Abalone Data Set')
data <- read_csv('data.csv')
#x is being set equal to the column name of the data thye want to plot
ggplot(data = data, aes(x = Index, y = Silh, color = Class)) +
geom_line() + xlab('Silh') + ylab('Class') + ggtitle('K Mean on Abalone Data Set')
data <- read_csv('data.csv')
#x is being set equal to the column name of the data thye want to plot
ggplot(data = data, aes(x = Index, y = Silh, color = Class)) +
geom_line() + xlab('Silh') + ylab('Class') + ggtitle('K Mean on Abalone Data Set')
data <- read_csv('data.csv')
#x is being set equal to the column name of the data thye want to plot
ggplot(data = data, aes(x = Index, y = Silh, color = Class)) +
geom_line() + xlab('Class') + ylab('Silhouette') + ggtitle('K Mean on Abalone Silhouette')
data <- read_csv('data.csv')
#x is being set equal to the column name of the data thye want to plot
ggplot(data = data, aes(x = K, y = SSE, color = Penalty)) +
geom_line() + xlab('K') + ylab('SSE') + ggtitle('Effect of Penalty on SSE at various K')
library(ggplot2)
library(tibble)
library(readr)
library(dplyr)
library(plotrix)
data <- read_csv('data.csv')
#x is being set equal to the column name of the data thye want to plot
ggplot(data = data, aes(x = Trees, y = Acc)) +
geom_line() + xlab('Number of Trees') + ylab('Accuracy') + ggtitle('Number of Tree Estimators Optimization')
library(shiny); runApp('Weather/shiny-quickstart-1/downloads/code/weatherApp.R')
comrpessed
runApp('Weather/shiny-quickstart-1/downloads/code/weatherApp.R')
runApp('Weather/shiny-quickstart-1/downloads/code/weatherApp.R')
selected_info
class(selected_info)
class(selected_info$selected1)
selected_info <- as.tibble(seleced_info)
selected_info <- as.tibble(selected_info)
class(selected_info)
class(selected_info$selected1)
class(as.character(selected_info$selected1))
length(column)
feature1
selected_info$selected1
class(selected_info$selected1)
as.character(selected_info$selected1)
as.numeric(selected_info$selected1)
as.numeric(as.character(selected_info$selected1))
runApp('Weather/shiny-quickstart-1/downloads/code/weatherApp.R')
comrpesses
feature1
feature2
compressed
shinyApp(
ui = fluidPage(
fluidRow(
column(12,
tableOutput('table')
)
)
),
server = function(input, output) {
output$table <- renderTable(iris)
}
)
shinyApp(
ui = fluidPage(
fluidRow(
column(12,
tableOutput('table')
)
)
),
server = function(input, output) {
output$table <- renderTable(iris)
}
)
if (interactive()) {
shinyApp(
ui = fluidPage(
fluidRow(
column(12,
dataTableOutput('table')
)
)
),
server = function(input, output) {
output$table <- renderDataTable(iris)
}
)
source('~/Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/shiny-quickstart-1/downloads/code/weatherApp.R')
library(shiny); runApp('Weather/tablevisualizer.R')
library(DT)
install.packages('DT')
library(DT)
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
?renderUI
runApp('Weather/tablevisualizer.R')
?textInput
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
?div
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
install.package('rhandsontable')
install.packages('rhandsontable')
library(rhandsontable)
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
getwd()
?reactiveValues
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
input_file
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
input_file
input$hot
DF
values[['DF']]
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
DF
class(DF)
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
input_file
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
input$hot
DF
DF
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
DF
mtcars
runApp('Weather/tablevisualizer.R')
DF
class(DF)
runApp('Weather/tablevisualizer.R')
class(DF)
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
library(shiny); runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
?selectInput
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
library(shiny); runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
dim(file_infos[[1]])
dim(file_infos[[1]])
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
file_infos[[1]]
file_infos[[1]]
file_infos[[1]]
dim(file_infos[[1]])
bp_info
dim(bp_info)
max(bp_info[1,])
sum(bp_info[1,])
bp_info[1,]
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
bp_info[i,]
max(bp_info[i,])
sum(bp_info[i,])
0/0
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
library(shiny); runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
names <- c('one','two')
matrix(names, nrow = 1, ncol = length(names))
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
thing
colnames(thing)
names
length(names)
names
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
values[['data']]
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
View(thing)
as.data.frame(matrix(names, nrow = 1, ncol = length(names)))
names
matrix(names, nrow = 1, ncol = length(names))
runApp('tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
as.data.frame(as.character(matrix(colnames(thing), nrow = 1, ncol = ncol(thing))))
as.character(matrix(colnames(thing), nrow = 1, ncol = ncol(thing)))
a = as.character(matrix(colnames(thing), nrow = 1, ncol = ncol(thing)))
class(a)
names
data.frame(names)
?data.frame
data.frame(t(names))
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
DF
DF
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
?rHandsontableOutput
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
runApp('Weather/tablevisualizer.R')
library(shiny); runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
library(shiny); runApp('Variance/vv-app.R')
input$file1$datapath
input$file1
input$file1$name
things <- input$file1$name
thigns
things
things %>% str_replace('.pileup','')
runApp('Variance/vv-app.R')
names
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
library(shiny); runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
data <- read_csv('Variance/variances.csv')
library(ggplot2)
library(tibble)
library(readr)
library(dplyr)
library(plotrix)
data <- read_csv('Variance/variances.csv')
data
library(ggplot2)
library(tibble)
library(readr)
library(dplyr)
library(plotrix)
data <- read_csv('Variance/variances.csv')
data
library(ggplot2)
library(tibble)
library(readr)
library(dplyr)
library(plotrix)
data <- read_csv('Variance/variance-data.csv')
data
ggplot(data = data, aes(x = Name, y = Variance)) +
geom_bar() + xlab('Number of Trees') + ylab('Accuracy') + ggtitle('Number of Tree Estimators Optimization')
ggplot(data = data, aes(x = Name)) +
geom_bar() + xlab('Number of Trees') + ylab('Accuracy') + ggtitle('Number of Tree Estimators Optimization')
ggplot(data = data, aes(x = Name)) +
geom_bar() + xlab('Number of Trees') + ylab('Accuracy') + ggtitle('Number of Tree Estimators Optimization')
ggplot(data = data, aes(x = variance)) +
geom_bar() + xlab('Number of Trees') + ylab('Accuracy') + ggtitle('Number of Tree Estimators Optimization')
ggplot(data = data, aes(x = Variance)) +
geom_bar() + xlab('Number of Trees') + ylab('Accuracy') + ggtitle('Number of Tree Estimators Optimization')
data
ggplot(data = data, aes(x = Variance, color = Name)) +
geom_bar() + xlab('Number of Trees') + ylab('Accuracy') + ggtitle('Number of Tree Estimators Optimization')
ggplot(data = data, aes(x = Variance, y = Name)) +
geom_bar() + xlab('Number of Trees') + ylab('Accuracy') + ggtitle('Number of Tree Estimators Optimization')
ggplot(data = data, aes(x = Variance, y = Name)) +
geom_bar()
data
ggplot(data = data, aes(x = Variance, y = Name))
+
geom_bar()
ggplot(data = data, aes(x = Variance, y = Name)) +
geom_bar()
ggplot(data = data, aes(x = Variance, y = Name)) +
geom_bar(stat="identity")
ggplot(data = data, aes(x = Name, y = Variance)) +
geom_bar(stat="identity")
ggplot(data = data, aes(x = Name, y = Variance), color = Name) +
geom_bar(stat="identity")
ggplot(data = data, aes(x = Name, y = Variance), fill = Name) +
geom_bar(stat="identity")
ggplot(data = data, aes(x = Name, y = Variance, fill = Name)) +
geom_bar(stat="identity")
data <- read_csv('Variance/variance-data.csv')
ggplot(data = data, aes(x = Name, y = Variance, fill = Name)) +
geom_bar(stat="identity")
data <- read_csv('Variance/variance-data.csv')
ggplot(data = data, aes(x = Name, y = Variance, fill = Name)) +
geom_bar(stat="identity")
ggplot(data = data, aes(x = Name, y = Variance, fill = Name)) +
geom_bar(stat="identity") + xlab('Genes') + ylab('Variance/Base Pair') + ggtitle('Number of Tree Estimators Optimization')
data <- read_csv('Variance/variance-data.csv')
ggplot(data = data, aes(x = Name, y = Variance, fill = Name)) +
geom_bar(stat="identity") + xlab('Genes') + ylab('Variance/Base Pair') + ggtitle('Number of Tree Estimators Optimization')
data <- read_csv('Variance/variance-data.csv')
ggplot(data = data, aes(x = Name, y = Variance, fill = Name)) +
geom_bar(stat="identity") + xlab('Genes') + ylab('Variance/Base Pair') + ggtitle('Number of Tree Estimators Optimization')
data <- read_csv('Variance/variance-data.csv')
ggplot(data = data, aes(x = Name, y = Variance, fill = Name)) +
geom_bar(stat="identity") + xlab('Genes') + ylab('Variance/Base Pair') + ggtitle('Number of Tree Estimators Optimization')
data <- read_csv('Variance/variance-data.csv')
ggplot(data = data, aes(x = Name, y = Variance, fill = Name)) +
geom_bar(stat="identity") + xlab('Genes') + ylab('Variance/Base Pair') + ggtitle('Number of Tree Estimators Optimization')
data <- read_csv('Variance/variance-data.csv')
ggplot(data = data, aes(x = Name, y = Variance, fill = Name)) +
geom_bar(stat="identity") + xlab('Genes') + ylab('Variance/Base Pair') + ggtitle('Number of Tree Estimators Optimization')
data <- read_csv('Variance/variance-data.csv')
ggplot(data = data, aes(x = Name, y = Variance, fill = Name)) +
geom_bar(stat="identity") + xlab('Genes') + ylab('Variance/Base Pair') + ggtitle('Number of Tree Estimators Optimization')
data <- read_csv('Variance/variance-data.csv')
ggplot(data = data, aes(x = Name, y = Variance, fill = Name)) +
geom_bar(stat="identity") + xlab('Genes') + ylab('Variance/Base Pair') + ggtitle('Amount of Variance')
ggplot(data = data, aes(x = Name, y = Variance, fill = Name)) +
geom_bar(stat="identity") + xlab('Genes') + ylab('Variance/Base Pair') + ggtitle('Variance Per Kilo Base pair')
data <- read_csv('Variance/variance-data.csv')
ggplot(data = data, aes(x = Name, y = Variance, fill = Name)) +
geom_bar(stat="identity") + xlab('Genes') + ylab('Variance/Kilo Base Pair') + ggtitle('Variance Per Kilo Base pair')
library(shiny); runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
runApp('Variance/vv-app.R')
